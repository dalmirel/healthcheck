syntax = "proto3";

package healthcheck.healthcheck;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "healthcheck/healthcheck/params.proto";
import "healthcheck/healthcheck/chain.proto";

option go_package = "healthcheck/x/healthcheck/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/params";
  
  }
  
  // Queries a list of Chain items.
  rpc Chain    (QueryGetChainRequest) returns (QueryGetChainResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/chain/{id}";
  
  }
  rpc ChainAll (QueryAllChainRequest) returns (QueryAllChainResponse) {
    option (google.api.http).get = "/healthcheck/healthcheck/chain";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetChainRequest {
  uint64 id = 1;
}

message QueryGetChainResponse {
  Chain Chain = 1 [(gogoproto.nullable) = false];
}

message QueryAllChainRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllChainResponse {
  repeated Chain                                  Chain      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

